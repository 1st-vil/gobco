package instrumenter

func binaryExpr(i int, a bool, b bool, c bool) {

	_ = gobcoCover(0, i > 0)
	pos := gobcoCover(1, i > 0)

	_ = pos

	both := gobcoCover(2, a) && gobcoCover(3, b)
	either := gobcoCover(4, a) || gobcoCover(5, b)
	_, _ = both, either

	_ = gobcoCover(9, i == 11) ||
		gobcoCover(10, i == 12) ||
		gobcoCover(8, i == 13) ||
		gobcoCover(7, i == 14) ||
		gobcoCover(6, i == 15)
	_ = gobcoCover(14, i != 21) &&
		gobcoCover(15, i != 22) &&
		gobcoCover(13, i != 23) &&
		gobcoCover(12, i != 24) &&
		gobcoCover(11, i != 25)

	_ = gobcoCover(16, i == 31) ||
		gobcoCover(17, i >= 32) && gobcoCover(18, i <= 33) ||
		gobcoCover(19, i >= 34) && gobcoCover(20, i <= 35)

	m := map[bool]int{}
	_ = gobcoCover(21, m[gobcoCover(22, i == 41)] == m[gobcoCover(23, i == 42)])

	f := func(args ...bool) {}
	f(gobcoCover(24, a) && gobcoCover(25, b))
	f(gobcoCover(27, a) && gobcoCover(28, b) && gobcoCover(26, c))
	f(!gobcoCover(29, a))
	f(!gobcoCover(30, a) && !gobcoCover(31, b) && !gobcoCover(32, c))
}

// :15:6: "i > 0"
// :16:9: "i > 0"
// :30:10: "a"
// :30:15: "b"
// :31:12: "a"
// :31:17: "b"
// :45:3: "i == 15"
// :44:3: "i == 14"
// :43:3: "i == 13"
// :41:6: "i == 11"
// :42:3: "i == 12"
// :50:3: "i != 25"
// :49:3: "i != 24"
// :48:3: "i != 23"
// :46:6: "i != 21"
// :47:3: "i != 22"
// :53:6: "i == 31"
// :54:3: "i >= 32"
// :54:14: "i <= 33"
// :55:3: "i >= 34"
// :55:14: "i <= 35"
// :58:6: "m[i == 41] == m[i == 42]"
// :58:8: "i == 41"
// :58:22: "i == 42"
// :63:4: "a"
// :63:9: "b"
// :64:14: "c"
// :64:4: "a"
// :64:9: "b"
// :65:5: "a"
// :66:5: "a"
// :66:11: "b"
// :66:17: "c"
